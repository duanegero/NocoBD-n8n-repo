{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9a8a8ed5-bb8d-4208-a8b5-f74ba0a40e39",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -1072,
        400
      ],
      "id": "ac99b7ff-f95a-44d3-aed3-d380b1836b32",
      "name": "Email Record Webhook",
      "webhookId": "9a8a8ed5-bb8d-4208-a8b5-f74ba0a40e39"
    },
    {
      "parameters": {
        "fieldToSplitOut": "body.data.rows[0].Attachments",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -624,
        304
      ],
      "id": "ca1752f8-5471-41af-a626-e98d8d8cfcb1",
      "name": "Split Attachments",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "url": "=http://nocodb:8080/{{ $('Split Attachments').item.json['body.data.rows[0].Attachments'].signedPath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -176,
        376
      ],
      "id": "5aeb6828-e4dd-4d85-8872-ae34c1b01893",
      "name": "HTTP Request (GET Attachments)"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Report</title>\n    <style>\n        /* Define a modern color palette */\n        :root {\n            --primary-color: #007bff; /* Bright, professional blue */\n            --text-dark: #212529;    /* Near-black text */\n            --text-light: #495057;   /* Muted text for values */\n            --bg-light: #f8f9fa;     /* Very light background */\n            --border-color: #e9ecef; /* Light gray border */\n        }\n\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: var(--bg-light);\n            margin: 0;\n            padding: 20px;\n            line-height: 1.6;\n        }\n        .container {\n            background-color: #ffffff;\n            max-width: 650px;\n            margin: 20px auto;\n            padding: 0;\n            border-radius: 12px;\n            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n            overflow: hidden;\n        }\n        \n        /* === UPDATED HEADER STYLES === */\n        .header {\n            text-align: left; /* Align text to the left */\n            padding: 30px 30px 20px 30px; /* Padding for spacing */\n            background-color: #ffffff; /* White background */\n            border-bottom: 4px solid var(--primary-color); /* Thin blue accent line */\n            margin-bottom: 10px; /* Space before content starts */\n        }\n        h1 {\n            color: var(--primary-color); /* Blue title text */\n            font-size: 28px;\n            font-weight: 600;\n            margin: 0 0 5px 0; /* Add a little space below the title */\n            line-height: 1.2;\n        }\n        h2 {\n            display: block; /* Make h2 visible for a subtitle */\n            color: var(--text-light); /* Muted gray subtitle */\n            font-size: 14px;\n            font-weight: 500;\n            margin: 0;\n            text-transform: uppercase;\n            letter-spacing: 1px;\n        }\n        /* ============================== */\n        \n        .content {\n            padding: 30px;\n        }\n        .data-row {\n            margin-bottom: 0;\n            padding: 15px 0;\n            border-bottom: 1px solid var(--border-color);\n            display: flex;\n            align-items: top;\n        }\n        .data-row:last-child {\n            border-bottom: none;\n        }\n        .label {\n            font-weight: 600;\n            color: var(--text-dark);\n            flex: 0 0 35%;\n            margin-right: 20px;\n            padding-right: 15px;\n            font-size: 15px;\n            text-align: left;\n        }\n        .value {\n            color: var(--text-light);\n            font-size: 15px;\n            flex: 1;\n            margin: 0;\n            padding: 0;\n        }\n        .data-row p.value {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\"container\">\n    <div class=\"header\">\n        <h1>{{ $json.body.data.rows[0].request_title }}</h1>\n    </div>\n\n    <div class=\"content\">\n        \n        <div class=\"data-row\">\n            <span class=\"label\"></span>\n            <p class=\"value\">{{ $json.body.data.rows[0].support_description }}</p>\n        </div>\n\n        <div class=\"data-row\">\n            <p class=\"value\">{{ $json.body.data.rows[0].priority }}</p>\n        </div>\n\n        <div class=\"data-row\">\n            <p class=\"value\">{{ $json.body.data.rows[0].status }}</p>\n        </div>\n\n        <div class=\"data-row\">\n            <p class=\"value\">{{ $json.body.data.rows[0].department }}</p>\n        </div>\n\n        <div class=\"data-row\">\n            <span class=\"label\">Created At:</span>\n            <p class=\"value\">{{ $json.body.data.rows[0].CreatedAt }}</p>\n        </div>\n    </div>\n\n</div>\n\n</body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -624,
        568
      ],
      "id": "e063f62c-8c6f-4c55-9291-df96422eb709",
      "name": "Create HTML Doc"
    },
    {
      "parameters": {
        "jsCode": "// Get the HTML data from the input\nconst htmlData = $input.item.json.html;\n\n// Create a buffer from the HTML data\nconst htmlBuffer = Buffer.from(htmlData, 'utf8');\n\n// Define the file object\nconst htmlFile = {\n  fileName: 'record.html',\n  mimeType: 'text/html',\n  data: htmlBuffer,\n};\n\n// Return a new item with the file data in the 'binary' field\n// and all the original JSON data in the 'json' field\nreturn [{\n  json: { ...$input.item.json },\n  binary: {\n    htmlFile: htmlFile,\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        568
      ],
      "id": "b728a85d-f435-4b34-a2de-99b92d21e5c0",
      "name": "Convert HTML to Binary File"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b0e7e19a-877d-45fd-ae16-c4dcaab20a1e",
              "leftValue": "={{ $('Email Record Webhook').item.json.body.data.rows[0].Attachments }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -848,
        400
      ],
      "id": "03c8d19f-c3f8-4970-a24b-6940eaceb6f5",
      "name": "If"
    },
    {
      "parameters": {
        "conversionType": "htmlToPdf",
        "inputSource": "binaryData",
        "binaryPropertyName": "htmlFile",
        "additionalOptions": {
          "format": "A4"
        },
        "htmlOptions": {
          "ignoreHTTPSErrors": false
        }
      },
      "type": "n8n-nodes-dante-pdf.dantePdf",
      "typeVersion": 1,
      "position": [
        -176,
        568
      ],
      "id": "84d6f4a2-769d-488b-9688-4ab8d5c7129f",
      "name": "Dante PDF"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "ptkf7qrqtlmqgh9",
        "table": "m6r9hwmylgfhbyz",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Id",
              "fieldValue": "={{ $('Email Record Webhook').item.json.body.data.rows[0].Id }}"
            },
            {
              "fieldName": "=Recipient Email",
              "fieldValue": "="
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        272,
        568
      ],
      "id": "92d7f342-0f1c-437d-9e72-ef09c1117c4e",
      "name": "Update Recipient Email Row1",
      "credentials": {
        "nocoDbApiToken": {
          "id": "0jPJYo279HZvTqNL",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "96e79096-429c-4933-9e6d-d91b8577f8bb",
              "name": "body",
              "value": "={{ $json.body }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -400,
        304
      ],
      "id": "6795d7dd-aec2-466c-9ca5-6a28ed78aa44",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Email Record Webhook').first().json.body.data.rows[0]['Recipient Email'] }}\n",
        "subject": "={{ $json.body.data.rows[0].request_title }}",
        "message": "=Hello\n<br>\n<br>\nPlease find attached the requested record, along with any relevant supporting documents.\n<br>\n<br>\nThank you.",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {}
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        48,
        568
      ],
      "id": "3bb03387-9c43-46d7-89b7-fb16ab539cdc",
      "name": "Email Record Components1",
      "webhookId": "d11e036b-3ab7-462f-8a4c-d717426eafe8",
      "credentials": {
        "gmailOAuth2": {
          "id": "x5oMdl7QcWqIyc0G",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "clashHandling": {
            "values": {
              "resolveClash": "addSuffix"
            }
          }
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        272,
        304
      ],
      "id": "a2cb9a2a-c203-4289-8460-b4d0758bc825",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "attachments",
        "options": {
          "includeBinaries": true
        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        48,
        376
      ],
      "id": "cd5e1800-6ec1-4b8d-b13f-b6a21652426c",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.attachments_1[0].body.data.rows[0]['Recipient Email'] }}",
        "subject": "={{ $json.attachments_1[0].body.data.rows[0].request_title }}",
        "message": "={{ $json.attachments_1[0].body.data.rows[0].support_description }}",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {
                "property": "={{ Object.keys($binary || {}).join(',') }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        496,
        304
      ],
      "id": "c1ec578d-2ba6-4034-99c9-4408925833de",
      "name": "Send a message",
      "webhookId": "eabac30b-5d7e-4e44-be91-a77a8dc719b5",
      "credentials": {
        "gmailOAuth2": {
          "id": "x5oMdl7QcWqIyc0G",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Email Record Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Attachments": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request (GET Attachments)": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create HTML Doc": {
      "main": [
        [
          {
            "node": "Convert HTML to Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert HTML to Binary File": {
      "main": [
        [
          {
            "node": "Dante PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Split Attachments",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create HTML Doc",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dante PDF": {
      "main": [
        [
          {
            "node": "Email Record Components1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request (GET Attachments)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Email Record Components1": {
      "main": [
        [
          {
            "node": "Update Recipient Email Row1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "40d4e8fd-1a84-469f-92e6-751ef162637f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ff5ebdb4fd5474eeb584329c98dfbc59cb47471d41ead6b1b80fd0b91b29ec6f"
  },
  "id": "g4ApgJfBBPovPRQ5",
  "tags": []
}